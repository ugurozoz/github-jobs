[{"C:\\p\\github-jobs\\src\\components\\Joblist\\JoblistItem\\JoblistItem.js":"1","C:\\p\\github-jobs\\src\\App.js":"2","C:\\p\\github-jobs\\src\\components\\UI\\spinner.js":"3","C:\\p\\github-jobs\\src\\state\\actions\\index.js":"4","C:\\p\\github-jobs\\src\\components\\main\\main.js":"5","C:\\p\\github-jobs\\src\\components\\jobdetail\\jobdetail.js":"6","C:\\p\\github-jobs\\src\\hoc\\Auxiliary\\Auxiliary.js":"7","C:\\p\\github-jobs\\src\\components\\Filters\\CitiesRadios\\CitiesRadios.js":"8","C:\\p\\github-jobs\\src\\components\\Joblist\\Joblist.js":"9"},{"size":1019,"mtime":1614802396396,"results":"10","hashOfConfig":"11"},{"size":562,"mtime":1614701812381,"results":"12","hashOfConfig":"11"},{"size":284,"mtime":1614110539092,"results":"13","hashOfConfig":"11"},{"size":1964,"mtime":1614454477570,"results":"14","hashOfConfig":"11"},{"size":342,"mtime":1614700894650,"results":"15","hashOfConfig":"11"},{"size":2453,"mtime":1614804678903,"results":"16","hashOfConfig":"11"},{"size":57,"mtime":1614110539093,"results":"17","hashOfConfig":"11"},{"size":971,"mtime":1614799349070,"results":"18","hashOfConfig":"11"},{"size":897,"mtime":1614802390552,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"czevbn",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\p\\github-jobs\\src\\components\\Joblist\\JoblistItem\\JoblistItem.js",[],"C:\\p\\github-jobs\\src\\App.js",["40","41"],"C:\\p\\github-jobs\\src\\components\\UI\\spinner.js",[],"C:\\p\\github-jobs\\src\\state\\actions\\index.js",[],["42","43"],"C:\\p\\github-jobs\\src\\components\\main\\main.js",[],"C:\\p\\github-jobs\\src\\components\\jobdetail\\jobdetail.js",["44","45"],"C:\\p\\github-jobs\\src\\hoc\\Auxiliary\\Auxiliary.js",[],"C:\\p\\github-jobs\\src\\components\\Filters\\CitiesRadios\\CitiesRadios.js",["46"],"import { useState } from 'react';\r\n\r\nexport const CitiesRadios = (props) => {\r\n  const [cities, setCities] = useState([\r\n    { cityName: 'London', citySelected: false },\r\n    { cityName: 'Amsterdam', citySelected: false },\r\n    { cityName: 'New York', citySelected: false },\r\n    { cityName: 'Berlin', citySelected: false },\r\n  ]);\r\n\r\n  const citylist = cities.map((city, index) => {\r\n    return (\r\n      <div className='city-radio' key={city.cityName}>\r\n        <label htmlFor={`city${index}`}>\r\n          <input\r\n            type='radio'\r\n            id={`city${index}`}\r\n            value={`${city.cityName}`}\r\n            name='city-radio'\r\n            {...(city.citySelected ? 'checked' : '')}\r\n          />\r\n\r\n          {city.cityName}\r\n        </label>\r\n        <span></span>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className='Filter-row city-select-radios'\r\n      onChange={props.changeHandler}\r\n    >\r\n      {citylist}\r\n    </div>\r\n  );\r\n};\r\n","C:\\p\\github-jobs\\src\\components\\Joblist\\Joblist.js",[],{"ruleId":"47","severity":1,"message":"48","line":1,"column":25,"nodeType":"49","messageId":"50","endLine":1,"endColumn":35},{"ruleId":"47","severity":1,"message":"51","line":1,"column":37,"nodeType":"49","messageId":"50","endLine":1,"endColumn":45},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":38,"column":11,"nodeType":"58","endLine":38,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":38,"column":48,"nodeType":"58","endLine":38,"endColumn":60},{"ruleId":"47","severity":1,"message":"59","line":4,"column":18,"nodeType":"49","messageId":"50","endLine":4,"endColumn":27},"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setCities' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]